{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "basePath": "/api/v1",
    "paths": {
        "/capacity": {
            "post": {
                "description": "Calculates the maximum size of a secret file (in bytes) that can be embedded into an uploaded audio file (MP3 or WAV) using the multiple-LSB method. The capacity is returned for 1, 2, 3, and 4 LSBs.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Steganography"
                ],
                "summary": "Calculate Audio Embedding Capacity",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Audio file (MP3 or WAV) to calculate capacity for.",
                        "name": "audio",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully calculated embedding capacity.",
                        "schema": {
                            "$ref": "#/definitions/handlers.CapacityResponse"
                        },
                        "headers": {
                            "X-Processing-Time": {
                                "type": "int",
                                "description": "Time taken to process the request in milliseconds"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request: No file uploaded, file is not MP3/WAV, or file is corrupted.",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "413": {
                        "description": "File too large",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error: Failed to process the file.",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/embed": {
            "post": {
                "description": "Embeds a secret file into an audio file (MP3 or WAV) using LSB steganography. If input is WAV, only the data chunk (audio samples) is modified and headers/metadata remain untouched. Output is provided in WAV format to preserve LSB data.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "audio/wav"
                ],
                "tags": [
                    "Steganography"
                ],
                "summary": "Embed Secret Data in Audio",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Audio file for embedding (MP3 or WAV, max 100MB)",
                        "name": "audio",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Secret file to embed (max 50MB)",
                        "name": "secret",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "enum": [
                            1,
                            2,
                            3,
                            4
                        ],
                        "type": "integer",
                        "description": "Number of LSB bits to use for embedding (1-4)",
                        "name": "lsb",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "enum": [
                            "true",
                            "false"
                        ],
                        "type": "string",
                        "description": "Whether to encrypt the secret file using Vigen√®re cipher",
                        "name": "use_encryption",
                        "in": "formData"
                    },
                    {
                        "enum": [
                            "true",
                            "false"
                        ],
                        "type": "string",
                        "description": "Whether to use random starting position for embedding",
                        "name": "use_random_start",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Steganography key used for encryption and random seed generation (max 25 characters)",
                        "name": "stego_key",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Desired filename for the output stego audio",
                        "name": "output_filename",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully embedded secret data",
                        "schema": {
                            "type": "file"
                        },
                        "headers": {
                            "Content-Disposition": {
                                "type": "string",
                                "description": "Filename for the stego audio file"
                            },
                            "X-Embedding-Method": {
                                "type": "string",
                                "description": "LSB method used for embedding"
                            },
                            "X-PSNR-Value": {
                                "type": "number",
                                "description": "Peak Signal-to-Noise Ratio indicating audio quality after embedding"
                            },
                            "X-Processing-Time": {
                                "type": "int",
                                "description": "Time taken to process the request in milliseconds"
                            },
                            "X-Secret-Size": {
                                "type": "int",
                                "description": "Size of embedded secret in bytes"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request: Invalid parameters or file issues",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "413": {
                        "description": "Files too large",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/extract": {
            "post": {
                "description": "Extracts hidden secret data from a stego audio file (MP3 or WAV) with automatic parameter detection. The system automatically detects LSB method, encryption, and random start settings from the embedded metadata.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Steganography"
                ],
                "summary": "Extract Secret Data from Audio",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Stego audio file (MP3 or WAV) containing embedded data (max 100MB)",
                        "name": "stego_audio",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Steganography key for decryption (required only if the embedded data was encrypted, max 25 characters)",
                        "name": "stego_key",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Desired filename for the extracted secret file (optional)",
                        "name": "output_filename",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully extracted secret data",
                        "schema": {
                            "type": "file"
                        },
                        "headers": {
                            "Content-Disposition": {
                                "type": "string",
                                "description": "Original filename of the extracted secret"
                            },
                            "X-Extraction-Method": {
                                "type": "string",
                                "description": "Auto-detected LSB method used for extraction"
                            },
                            "X-Processing-Time": {
                                "type": "int",
                                "description": "Time taken to process the request in milliseconds"
                            },
                            "X-Secret-Size": {
                                "type": "int",
                                "description": "Size of extracted secret in bytes"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request: Invalid file format",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "413": {
                        "description": "File too large",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error or extraction failed",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Returns the health status of the API service",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "Service is healthy",
                        "schema": {
                            "$ref": "#/definitions/handlers.HealthResponse"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.CapacityResponse": {
            "type": "object",
            "properties": {
                "capacities": {
                    "$ref": "#/definitions/models.CapacityResult"
                },
                "file_info": {
                    "$ref": "#/definitions/handlers.FileInfo"
                },
                "processing_time_ms": {
                    "type": "integer"
                }
            }
        },
        "handlers.FileInfo": {
            "type": "object",
            "properties": {
                "bitrate": {
                    "type": "integer"
                },
                "channels": {
                    "type": "integer"
                },
                "duration_seconds": {
                    "type": "number"
                },
                "filename": {
                    "type": "string"
                },
                "sample_rate": {
                    "type": "integer"
                },
                "size_bytes": {
                    "type": "integer"
                }
            }
        },
        "handlers.HealthResponse": {
            "type": "object",
            "properties": {
                "dependencies": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "uptime": {
                    "type": "integer"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "models.CapacityResult": {
            "type": "object",
            "properties": {
                "1_lsb": {
                    "type": "integer"
                },
                "2_lsb": {
                    "type": "integer"
                },
                "3_lsb": {
                    "type": "integer"
                },
                "4_lsb": {
                    "type": "integer"
                }
            }
        },
        "models.ErrorDetail": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "object",
                    "additionalProperties": true
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/models.ErrorDetail"
                },
                "success": {
                    "type": "boolean"
                }
            }
        }
    }
}