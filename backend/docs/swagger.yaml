basePath: /api/v1
definitions:
  handlers.CapacityResponse:
    properties:
      capacities:
        $ref: '#/definitions/models.CapacityResult'
      file_info:
        $ref: '#/definitions/handlers.FileInfo'
      processing_time_ms:
        type: integer
    type: object
  handlers.FileInfo:
    properties:
      bitrate:
        type: integer
      channels:
        type: integer
      duration_seconds:
        type: number
      filename:
        type: string
      sample_rate:
        type: integer
      size_bytes:
        type: integer
    type: object
  handlers.HealthResponse:
    properties:
      dependencies:
        additionalProperties:
          type: string
        type: object
      status:
        type: string
      timestamp:
        type: string
      uptime:
        type: integer
      version:
        type: string
    type: object
  models.CapacityResult:
    properties:
      1_lsb:
        type: integer
      2_lsb:
        type: integer
      3_lsb:
        type: integer
      4_lsb:
        type: integer
    type: object
  models.ErrorDetail:
    properties:
      details:
        additionalProperties: true
        type: object
      message:
        type: string
    type: object
  models.ErrorResponse:
    properties:
      error:
        $ref: '#/definitions/models.ErrorDetail'
      success:
        type: boolean
    type: object
info:
  contact: {}
paths:
  /capacity:
    post:
      consumes:
      - multipart/form-data
      description: Calculates the maximum size of a secret file (in bytes) that can
        be embedded into an uploaded audio file (MP3 or WAV) using the multiple-LSB
        method. The capacity is returned for 1, 2, 3, and 4 LSBs.
      parameters:
      - description: Audio file (MP3 or WAV) to calculate capacity for.
        in: formData
        name: audio
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully calculated embedding capacity.
          headers:
            X-Processing-Time:
              description: Time taken to process the request in milliseconds
              type: int
          schema:
            $ref: '#/definitions/handlers.CapacityResponse'
        "400":
          description: 'Bad Request: No file uploaded, file is not MP3/WAV, or file
            is corrupted.'
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "413":
          description: File too large
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: 'Internal Server Error: Failed to process the file.'
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Calculate Audio Embedding Capacity
      tags:
      - Steganography
  /embed:
    post:
      consumes:
      - multipart/form-data
      description: Embeds a secret file into an MP3 audio file using LSB steganography.
        Returns the stego audio file in MP3 format (if ffmpeg available) or WAV format
        (fallback) with embedded data and quality metrics.
      parameters:
      - description: MP3 audio file for embedding (max 100MB)
        in: formData
        name: audio
        required: true
        type: file
      - description: Secret file to embed (max 50MB)
        in: formData
        name: secret
        required: true
        type: file
      - description: Number of LSB bits to use for embedding (1-4)
        enum:
        - 1
        - 2
        - 3
        - 4
        in: formData
        name: lsb
        required: true
        type: integer
      - description: Whether to encrypt the secret file using Vigenère cipher
        enum:
        - "true"
        - "false"
        in: formData
        name: use_encryption
        type: string
      - description: Whether to use random starting position for embedding
        enum:
        - "true"
        - "false"
        in: formData
        name: use_random_start
        type: string
      - description: Steganography key used for encryption and random seed generation
          (max 25 characters)
        in: formData
        name: stego_key
        type: string
      - description: Desired filename for the output stego audio
        in: formData
        name: output_filename
        type: string
      produces:
      - audio/mpeg
      - audio/wav
      responses:
        "200":
          description: Successfully embedded secret data
          headers:
            Content-Disposition:
              description: Filename for the stego audio file
              type: string
            X-Embedding-Method:
              description: LSB method used for embedding
              type: string
            X-PSNR-Value:
              description: Peak Signal-to-Noise Ratio indicating audio quality after
                embedding
              type: number
            X-Processing-Time:
              description: Time taken to process the request in milliseconds
              type: int
            X-Secret-Size:
              description: Size of embedded secret in bytes
              type: int
          schema:
            type: file
        "400":
          description: 'Bad Request: Invalid parameters or file issues'
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "413":
          description: Files too large
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Embed Secret Data in Audio
      tags:
      - Steganography
  /extract:
    post:
      consumes:
      - multipart/form-data
      description: Extracts hidden secret data from a stego audio file (MP3 or WAV)
        with auto-detection of embedding parameters. Only requires the stego file
        and optional key.
      parameters:
      - description: Stego audio file (MP3 or WAV) containing embedded data (max 100MB)
        in: formData
        name: stego_audio
        required: true
        type: file
      - description: Steganography key (required only if file was encrypted during
          embedding)
        in: formData
        name: stego_key
        type: string
      - description: Desired filename for the extracted secret file (optional - will
          use original filename if not provided)
        in: formData
        name: output_filename
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: Successfully extracted secret data
          headers:
            Content-Disposition:
              description: Original filename of the extracted secret
              type: string
            X-Extraction-Method:
              description: Auto-detected LSB method used for extraction
              type: string
            X-Processing-Time:
              description: Time taken to process the request in milliseconds
              type: int
            X-Secret-Size:
              description: Size of extracted secret in bytes
              type: int
          schema:
            type: file
        "400":
          description: 'Bad Request: Invalid file format'
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "413":
          description: File too large
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: 'Internal Server Error: Failed to extract or auto-detect parameters'
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Extract Secret Data from Audio (Simplified)
      tags:
      - Steganography
  /extract-manual:
    post:
      consumes:
      - multipart/form-data
      description: Extracts hidden secret data from a stego audio file with manually
        specified parameters. For advanced users who know the exact embedding settings.
      parameters:
      - description: Stego audio file (MP3 or WAV) containing embedded data (max 100MB)
        in: formData
        name: stego_audio
        required: true
        type: file
      - description: Number of LSB bits used during embedding (1-4)
        enum:
        - 1
        - 2
        - 3
        - 4
        in: formData
        name: lsb
        required: true
        type: integer
      - description: Whether the embedded data was encrypted using Vigenère cipher
        enum:
        - "true"
        - "false"
        in: formData
        name: use_encryption
        type: string
      - description: Whether random starting position was used during embedding
        enum:
        - "true"
        - "false"
        in: formData
        name: use_random_start
        type: string
      - description: Steganography key used for decryption and random position generation
        in: formData
        name: stego_key
        type: string
      - description: Desired filename for the extracted secret file
        in: formData
        name: output_filename
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: Successfully extracted secret data
          headers:
            Content-Disposition:
              description: Original filename of the extracted secret
              type: string
            X-Extraction-Method:
              description: LSB method used for extraction
              type: string
            X-Processing-Time:
              description: Time taken to process the request in milliseconds
              type: int
            X-Secret-Size:
              description: Size of extracted secret in bytes
              type: int
          schema:
            type: file
        "400":
          description: 'Bad Request: Invalid parameters or file'
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "413":
          description: File too large
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Extract Secret Data from Audio (Manual Parameters)
      tags:
      - Steganography
  /health:
    get:
      description: Returns the health status of the API service
      produces:
      - application/json
      responses:
        "200":
          description: Service is healthy
          schema:
            $ref: '#/definitions/handlers.HealthResponse'
        "503":
          description: Service unavailable
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Health Check
      tags:
      - System
swagger: "2.0"
