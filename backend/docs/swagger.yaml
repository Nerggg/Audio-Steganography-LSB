basePath: /api/v1
definitions:
  handlers.CapacityResponse:
    properties:
      capacities:
        $ref: '#/definitions/models.CapacityResult'
      file_info:
        $ref: '#/definitions/handlers.FileInfo'
      processing_time_ms:
        type: integer
    type: object
  handlers.FileInfo:
    properties:
      bitrate:
        type: integer
      channels:
        type: integer
      duration_seconds:
        type: number
      filename:
        type: string
      sample_rate:
        type: integer
      size_bytes:
        type: integer
    type: object
  handlers.HealthResponse:
    properties:
      dependencies:
        additionalProperties:
          type: string
        type: object
      status:
        type: string
      timestamp:
        type: string
      uptime:
        type: integer
      version:
        type: string
    type: object
  models.CapacityResult:
    properties:
      1_lsb:
        description: LSB method capacities
        type: integer
      2_lsb:
        type: integer
      3_lsb:
        type: integer
      4_lsb:
        type: integer
      parity:
        description: Parity coding capacity (1 bit per byte)
        type: integer
    type: object
  models.ErrorDetail:
    properties:
      details:
        additionalProperties: true
        type: object
      message:
        type: string
    type: object
  models.ErrorResponse:
    properties:
      error:
        $ref: '#/definitions/models.ErrorDetail'
      success:
        type: boolean
    type: object
info:
  contact: {}
paths:
  /capacity:
    post:
      consumes:
      - multipart/form-data
      description: Calculates the maximum size of a secret file (in bytes) that can
        be embedded into an uploaded audio file (MP3 or WAV) using different steganography
        methods. The capacity is returned for LSB methods (1-4 LSBs) and Parity method
        (1 bit per byte).
      parameters:
      - description: Audio file (MP3 or WAV) to calculate capacity for.
        in: formData
        name: audio
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Successfully calculated embedding capacity.
          headers:
            X-Processing-Time:
              description: Time taken to process the request in milliseconds
              type: int
          schema:
            $ref: '#/definitions/handlers.CapacityResponse'
        "400":
          description: 'Bad Request: No file uploaded, file is not MP3/WAV, or file
            is corrupted.'
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "413":
          description: File too large
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: 'Internal Server Error: Failed to process the file.'
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Calculate Audio Embedding Capacity
      tags:
      - Steganography
  /embed:
    post:
      consumes:
      - multipart/form-data
      description: Embeds a secret file into the provided audio file using LSB or
        Parity steganography method. LSB method supports 1-4 LSBs, while Parity method
        uses 1 bit per byte. Supports optional Vigenère encryption and random embedding
        start using a stego key. Metadata (filename, format, size, method, flags)
        is automatically stored inside the stego file.
      parameters:
      - description: Cover audio file (MP3)
        in: formData
        name: audio
        required: true
        type: file
      - description: Secret file to embed
        in: formData
        name: secret
        required: true
        type: file
      - description: 'Steganography method: ''lsb'' or ''parity'''
        in: formData
        name: method
        required: true
        type: string
      - description: Number of LSBs to use (1-4), required only for LSB method
        in: formData
        name: lsb
        type: integer
      - description: Key for encryption and/or random start
        in: formData
        name: stego_key
        type: string
      - description: Enable Vigenère encryption
        in: formData
        name: use_encryption
        type: boolean
      - description: Enable random start embedding
        in: formData
        name: use_random_start
        type: boolean
      - description: Output stego audio filename
        in: formData
        name: output_filename
        type: string
      produces:
      - audio/mpeg
      responses:
        "200":
          description: Stego audio file with embedded secret
          schema:
            type: file
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Processing error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Embed secret file into audio
      tags:
      - Steganography
  /extract:
    post:
      consumes:
      - multipart/form-data
      description: Extracts a secret file that was previously embedded in an audio
        file using LSB or Parity steganography. Auto-detects the method used during
        embedding. Supports optional Vigenère decryption and random start. Automatically
        restores original filename and metadata.
      parameters:
      - description: Stego audio file (MP3 with embedded data)
        in: formData
        name: stego_audio
        required: true
        type: file
      - description: 'Optional: specify method (''lsb'' or ''parity'') to speed up
          extraction'
        in: formData
        name: method
        type: string
      - description: Key for decryption and/or random start
        in: formData
        name: stego_key
        type: string
      - description: Optional output filename override
        in: formData
        name: output_filename
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: Extracted secret file
          schema:
            type: file
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Extraction error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Extract secret file from audio
      tags:
      - Steganography
  /health:
    get:
      description: Returns the health status of the API service
      produces:
      - application/json
      responses:
        "200":
          description: Service is healthy
          schema:
            $ref: '#/definitions/handlers.HealthResponse'
        "503":
          description: Service unavailable
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Health Check
      tags:
      - System
swagger: "2.0"
